/PDP-12 DHRYSTONE BY ZACHARY KIRTZ
/BASED ON DHRYSTONE BY REINHOLD P. WEICKER

*20
/GLOBAL VARIABLES
GPTR,		PTDAT
GNPTR,		NPTDAT
GINT,		0
GBOOL,		0
GCH1,		0
GCH2,		0
KGARR,		GARR
KGARR2,		GARR2

/GLOBAL CONSTANTS
IDENT1,		0
IDENT2,		1
IDENT3,		2
IDENT4,		3
IDENT5,		4
PAGE

/PAGE START: CHRCMP & STRCMP

/CHARACTER COMPARE FUNCTION
/PARAM[AC]	FIRST CHAR
/PARAM[MQ]	SECOND CHAR
CHRCMP,	0
	AND (77		/ONLY WANT 2ND HALF
	DCA 1		/STORE IN SCRATCH
	MQA		/LOAD 2ND CHR INTO AC
	AND (77		/ONLY WANT 2ND HALF
	CIA		/NEGATE 2ND CHR
	TAD 1		/SUB 2ND FROM 1ST
	JMP CHRCMP

/STRING COMPARE FUNCTION
/PARAM[AC]	FIRST STRING
/PARAM[1]	SECOND STRING
STRCMP,	0
	DCA 2		/STORE 1ST TO SCRATCH
SCMPLP,	TAD I 1		/LOAD 1ST HALF OF 2ND STR
	RTR;RTR;RTR
	MQL
	TAD I 2		/LOAD 1ST HALF OF 1ST STR
	RTR;RTR;RTR
	JMS CHRCMP	/COMPARE CHARS
	SZA		/RETURN IF DIFF
	JMP STRCMP
	TAD I 1		/LOAD 2ND HALF OF 2ND STR
	MQL
	TAD I 2		/LOAD 2ND HALF OF 1ST STR
	JMS CHRCMP	/COMPARE CHARS
	SZA		/RETURN IF DIFF
	JMP STRCMP
	MQL MQA		/CHECK IF 2ND HALF IS ZERO
	SNA		/RETURN IF IT IS
	JMP SCMPRE
	ISZ 1		/INCREMENT STR PTRS
	ISZ 2
	JMP SCMPLP	/LOOP BACK
SCMPRE,	CLA MQA		/COPY CMP RES BACK TO AC
	JMP STRCMP

/PAGE START: STRCPY & MEMCPY

/STRING COPY FUNCTION
/PARAM[AC]	DST
/PARAM[MQ]	SRC
STRCPY,	0
	TAD (-1		/SUB 1 FROM EACH
	DCA 10		/AND PUT IN AUTOIDX
	MQA
	TAD (-1
	DCA 11
SCPYLP,	TAD I 11	/LOAD A WORD
	MQL		/SAVE FOR LATER
	DCA I 10	/SAVE AT DST
	MQA
	AND (77		/CHECK IF 2ND HALF IS ZERO
	SNA		/RETURN IF IT IS
	JMP STRCPY
	JMP SCPYLP	/OTHERWISE, LOOP AGAIN

/MEMORY COPY FUNCTION
/PARAM[AC]	DST
/PARAM[MQ]	SRC
/PARAM[1]	LENGTH
MEMCPY,	0
	TAD (-1		/SUB 1 FROM EACH
	DCA 10		/AND PUT IN AUTOIDX
	MQA
	TAD (-1
	DCA 11
	DCA 12		/CLEAR COUNTER
MCPYLP,	TAD 12		/CHECK IF WE'VE COPIED
	CIA		/ALL BY SUB COUNT FROM LEN
	TAD 1
	SPA		/RETURN IF RES IS NEGATIVE
	JMP MEMCPY
	TAD 11		/READ A WORD
	DCA 10		/SAVE TO DST
